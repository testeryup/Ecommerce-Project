import dotenv from 'dotenv';
import nodemailer from "nodemailer";

dotenv.config();

// ‚úÖ T·∫°o transporter m·ªôt l·∫ßn
let transporter = null;

const createTransporter = () => {
    if (!transporter) {
        transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL_APP,
                pass: process.env.EMAIL_APP_PASSWORD
            }
        });
    }
    return transporter;
};

// ‚úÖ EMAIL: Order confirmation v·ªõi credentials only
export const sendOrderConfirmationEmail = async ({
    receiverEmail,
    buyerName,
    orderId,
    total,
    promoCode = null,
    saved = 0,
    credentials
}) => {
    try {
        const transporter = createTransporter();

        // ‚ùå X√ìA PH·∫¶N itemsHtml
        // const itemsHtml = items.map(item => `...`).join('');

        // ‚úÖ CH·ªà GI·ªÆ L·∫†I credentialsHtml
        const credentialsHtml = credentials.map(cred => `
            <div style="background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 8px; padding: 15px; margin: 10px 0;">
                <h4 style="color: #495057; margin: 0 0 10px 0;">üéÆ ${cred.skuId}</h4>
                <p style="margin: 5px 0;"><strong>S·ªë l∆∞·ª£ng:</strong> ${cred.accounts.length || 0} t√†i kho·∫£n</p>
                <div style="background-color: #ffffff; border: 1px solid #ced4da; border-radius: 4px; padding: 10px; margin-top: 10px;">
                    ${cred.accounts.map((account, index) => `
                        <div style="border-bottom: 1px solid #e9ecef; padding: 8px 0; ${index === cred.accounts.length - 1 ? 'border-bottom: none;' : ''}">
                            <strong>T√†i kho·∫£n ${index + 1}:</strong><br>
                            ${typeof account === 'object' ?
                Object.entries(account).map(([key, value]) =>
                    `<span style="color: #6c757d;">${key}:</span> <code style="background-color: #f8f9fa; padding: 2px 4px; border-radius: 3px;">${value}</code>`
                ).join(' | ') :
                `<code style="background-color: #f8f9fa; padding: 2px 4px; border-radius: 3px;">${account}</code>`
            }
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('');

        const mailOptions = {
            from: `"OCTOPUS üêô" <${process.env.EMAIL_APP}>`,
            to: receiverEmail,
            subject: `üéâ ƒê∆°n h√†ng #${orderId} - T√†i kho·∫£n ƒë√£ s·∫µn s√†ng!`,
            html: `
                <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 700px; margin: 0 auto; background-color: #ffffff;">
                    <!-- Header -->
                    <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
                        <h1 style="margin: 0; font-size: 28px;">üéâ ƒê∆°n h√†ng th√†nh c√¥ng!</h1>
                        <p style="margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;">C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng t·∫°i Octopus</p>
                    </div>

                    <!-- Content -->
                    <div style="padding: 30px;">
                        <p style="font-size: 16px; color: #333;">Xin ch√†o <strong>${buyerName}</strong>,</p>
                        
                        <p style="color: #666; line-height: 1.6;">
                            ƒê∆°n h√†ng <strong style="color: #667eea;">#${orderId}</strong> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng! 
                            D∆∞·ªõi ƒë√¢y l√† t√†i kho·∫£n b·∫°n ƒë√£ mua.
                        </p>

                        <!-- ‚ùå X√ìA TO√ÄN B·ªò PH·∫¶N ORDER SUMMARY TABLE -->
                        
                        <!-- Order Total Summary (Simple) -->
                        <div style="background-color: #f8f9fa; border-radius: 8px; padding: 20px; margin: 25px 0; text-align: center;">
                            ${promoCode ? `
                                <p style="margin: 5px 0; color: #28a745; font-size: 16px;">
                                    <strong>üé´ M√£ gi·∫£m gi√° ${promoCode}:</strong> Ti·∫øt ki·ªám ${saved.toLocaleString('vi-VN')} VND
                                </p>
                            ` : ''}
                            <p style="margin: 10px 0; font-size: 20px; color: #dc3545;">
                                <strong>üí∞ T·ªïng thanh to√°n: ${total.toLocaleString('vi-VN')} VND</strong>
                            </p>
                        </div>

                        <!-- Credentials Section -->
                        <div style="margin: 30px 0;">
                            <h3 style="color: #495057; margin: 0 0 15px 0;">üîë T√†i kho·∫£n c·ªßa b·∫°n</h3>
                            <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 15px; margin-bottom: 20px;">
                                <p style="margin: 0; color: #856404;">
                                    <strong>‚ö†Ô∏è Quan tr·ªçng:</strong> Vui l√≤ng l∆∞u gi·ªØ th√¥ng tin t√†i kho·∫£n c·∫©n th·∫≠n. 
                                    Kh√¥ng chia s·∫ª v·ªõi ng∆∞·ªùi kh√°c ƒë·ªÉ tr√°nh m·∫•t t√†i kho·∫£n.
                                </p>
                            </div>
                            
                            ${credentialsHtml}
                        </div>

                        <!-- Footer Notes -->
                        <div style="background-color: #e3f2fd; border-radius: 8px; padding: 20px; margin: 25px 0;">
                            <h4 style="color: #1976d2; margin: 0 0 10px 0;">üìù L∆∞u √Ω quan tr·ªçng</h4>
                            <ul style="color: #424242; margin: 10px 0; padding-left: 20px;">
                                <li>Th√¥ng tin t√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c g·ª≠i qua email n√†y</li>
                                <li>B·∫°n c√≥ th·ªÉ xem l·∫°i ƒë∆°n h√†ng trong ph·∫ßn "L·ªãch s·ª≠ mua h√†ng"</li>
                                <li>Li√™n h·ªá support n·∫øu g·∫∑p v·∫•n ƒë·ªÅ v·ªõi t√†i kho·∫£n</li>
                                <li>Kh√¥ng chia s·∫ª th√¥ng tin ƒëƒÉng nh·∫≠p v·ªõi ng∆∞·ªùi kh√°c</li>
                                <li>T√†i kho·∫£n c√≥ th·ªÉ c√≥ th·ªùi h·∫°n s·ª≠ d·ª•ng, vui l√≤ng ki·ªÉm tra</li>
                            </ul>
                        </div>

                        <div style="text-align: center; margin: 30px 0;">
                            <p style="color: #666;">C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª•!</p>
                            <p style="margin: 0;"><strong>ƒê·ªôi ng≈© Octopus üêô</strong></p>
                        </div>
                    </div>

                    <!-- Footer -->
                    <div style="background-color: #f8f9fa; padding: 20px; text-align: center; border-radius: 0 0 10px 10px;">
                        <p style="margin: 0; font-size: 12px; color: #6c757d;">
                            Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Octopus.<br>
                            Vui l√≤ng kh√¥ng reply email n√†y.
                        </p>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log(`‚úÖ Order confirmation email sent to ${receiverEmail}:`, info.messageId);
        return { success: true, messageId: info.messageId };

    } catch (error) {
        console.error(`‚ùå Error sending order confirmation email to ${receiverEmail}:`, error);
        return { success: false, error: error.message };
    }
};

// ‚úÖ Gi·ªØ l·∫°i function test
export const sendTestEmail = async ({ receiverEmail }) => {
    try {
        const transporter = createTransporter();

        const mailOptions = {
            from: `"OCTOPUSüêô" <${process.env.EMAIL_APP}>`,
            to: receiverEmail,
            subject: 'B·∫°n c√≥ tin nh·∫Øn m·ªõi t·ª´ Octopus',
            text: 'This is a test email sent using Nodemailer.',
            html: '<p>This is a test email sent using <b>Nodemailer</b>.</p>'
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('Message sent: %s', info.messageId);
        return { success: true, messageId: info.messageId };
    } catch (error) {
        console.error('Error sending email:', error);
        return { success: false, error: error.message };
    }
};
